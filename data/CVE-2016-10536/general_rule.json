{
    "general_rule": "Rule: Simplify and Standardize Error Handling\n\n1. Type of improvement: \nConsolidating and standardizing error handling logic across a codebase.\n\n2. Benefits:\n- Improves code consistency and readability\n- Reduces duplication of error handling code\n- Makes it easier to update error handling behavior globally\n- Can improve performance by reducing redundant checks\n\n3. How to identify opportunities:\n- Look for repeated error checking patterns throughout the code\n- Identify places where errors are handled inconsistently\n- Find areas where error information is incomplete or inconsistent\n\n4. General approach:\n- Create standardized error objects or structures\n- Implement centralized error handling functions/methods\n- Use consistent naming and patterns for error checks\n- Ensure all errors include relevant contextual information\n- Consider using error codes or types for programmatic handling\n- Add logging or monitoring for errors in a centralized way\n- Review error handling during code reviews\n\nThis pattern can be applied across different languages and frameworks to create more robust and maintainable error handling throughout a codebase."
}