{
    "general_rule": "Rule: Enhance Input Validation and Error Handling\n\n1. Type of improvement:\n   Strengthen input validation and error handling, particularly for user-provided data and critical operations.\n\n2. Benefits:\n   - Improves security by reducing vulnerabilities from malformed inputs\n   - Enhances user experience by providing more specific error messages\n   - Increases code reliability and robustness\n   - Simplifies debugging and maintenance\n\n3. How to identify opportunities:\n   - Review functions that process user input or external data\n   - Examine error handling patterns, especially in authentication and user management code\n   - Look for overly permissive validation checks or broad error categories\n   - Identify areas where more granular error reporting would be beneficial\n\n4. General application:\n   - Implement stricter validation for all user inputs, including URLs and form data\n   - Use specific error types or codes instead of generic errors\n   - Add additional checks for edge cases and unexpected inputs\n   - Improve error messages to be more informative for both users and developers\n   - Consider using validation libraries or frameworks appropriate for your language/platform\n   - Implement consistent error handling patterns across the codebase"
}