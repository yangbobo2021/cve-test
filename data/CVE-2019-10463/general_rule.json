{
    "general_rule": "Rule: Implement Proper Permission Checks for Sensitive Operations\n\n1. Type of Improvement:\n   Adding security checks to ensure that only authorized users can perform sensitive operations.\n\n2. Benefits:\n   - Enhances security by preventing unauthorized access to critical functionalities\n   - Reduces the risk of malicious actions or accidental misuse\n   - Improves compliance with security best practices and regulations\n\n3. How to Identify Similar Opportunities:\n   - Look for methods or functions that perform administrative or sensitive operations\n   - Check for operations that modify system configurations, test connections, or access privileged information\n   - Review API endpoints or user interface actions that should be restricted to certain user roles\n\n4. General Application:\n   - Implement a permission checking mechanism appropriate for your application's architecture\n   - Add permission checks at the beginning of sensitive methods or API endpoints\n   - Ensure that the permission check is performed before any actual operation takes place\n   - Use a centralized permission management system to maintain consistency across the application\n   - Log attempts of unauthorized access for auditing and security monitoring purposes\n\nBy applying this rule, developers can significantly improve the security posture of their applications across various projects and programming languages, protecting sensitive operations from unauthorized access."
}