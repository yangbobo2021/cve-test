{
    "before_functions": "@RequirePOST\npublic FormValidation doTestDynatraceConnection(\n        @QueryParameter(\"protocol\") final String protocol,\n        @QueryParameter(\"host\") final String host,\n        @QueryParameter(\"port\") final String port,\n        @QueryParameter(\"username\") final String username,\n        @QueryParameter(\"validateCerts\") final boolean validateCerts,\n        @QueryParameter(\"password\") final String password) {\n\n    try {\n        final SystemProfiles connection = new SystemProfiles(new DynatraceClient(new BasicServerConfiguration(username, password, protocol.startsWith(\"https\"), host, Integer.parseInt(port), validateCerts, 10000)));\n        try {\n            connection.getSystemProfiles();\n        } catch (ServerConnectionException e) {\n            if (e.getCause() instanceof SSLHandshakeException) {\n                return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_CERT_EXCEPTION(e.getCause().getMessage()));\n            }\n            throw e;\n        } catch (ServerResponseException e) {\n            switch (e.getStatusCode()) {\n                case HTTP_UNAUTHORIZED:\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_UNAUTHORIZED());\n                case HTTP_FORBIDDEN:\n                    if (protocol.equals(\"http\")) {\n                        return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_FORBIDDEN_HTTP_USED(ExceptionUtils.getRootCauseMessage(e)));\n                    }\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_FORBIDDEN_HTTPS_USED(ExceptionUtils.getRootCauseMessage(e)));\n                case HTTP_NOT_FOUND:\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_NOT_FOUND());\n                default:\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_OTHER_CODE(e.getStatusCode()));\n            }\n        }\n        return FormValidation.ok(Messages.RECORDER_VALIDATION_CONNECTION_OK());\n    } catch (Exception e) {\n        e.printStackTrace();\n        return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_UNKNOWN(e.toString()));\n    }\n}\n",
    "after_functions": "@RequirePOST\npublic FormValidation doTestDynatraceConnection(\n        @QueryParameter(\"protocol\") final String protocol,\n        @QueryParameter(\"host\") final String host,\n        @QueryParameter(\"port\") final String port,\n        @QueryParameter(\"username\") final String username,\n        @QueryParameter(\"validateCerts\") final boolean validateCerts,\n        @QueryParameter(\"password\") final String password) {\n    final Jenkins instance = Jenkins.getInstance();\n    if (instance == null) {\n        throw new IllegalStateException(\"Jenkins instance not available. Could not handle test connection request.\");\n    }\n    instance.checkPermission(Jenkins.ADMINISTER);\n    try {\n        final SystemProfiles connection = new SystemProfiles(new DynatraceClient(new BasicServerConfiguration(username, password, protocol.startsWith(\"https\"), host, Integer.parseInt(port), validateCerts, 10000)));\n        try {\n            connection.getSystemProfiles();\n        } catch (ServerConnectionException e) {\n            if (e.getCause() instanceof SSLHandshakeException) {\n                return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_CERT_EXCEPTION(e.getCause().getMessage()));\n            }\n            throw e;\n        } catch (ServerResponseException e) {\n            switch (e.getStatusCode()) {\n                case HTTP_UNAUTHORIZED:\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_UNAUTHORIZED());\n                case HTTP_FORBIDDEN:\n                    if (protocol.equals(\"http\")) {\n                        return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_FORBIDDEN_HTTP_USED(ExceptionUtils.getRootCauseMessage(e)));\n                    }\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_FORBIDDEN_HTTPS_USED(ExceptionUtils.getRootCauseMessage(e)));\n                case HTTP_NOT_FOUND:\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_NOT_FOUND());\n                default:\n                    return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_OTHER_CODE(e.getStatusCode()));\n            }\n        }\n        return FormValidation.ok(Messages.RECORDER_VALIDATION_CONNECTION_OK());\n    } catch (Exception e) {\n        e.printStackTrace();\n        return FormValidation.warning(Messages.RECORDER_VALIDATION_CONNECTION_UNKNOWN(e.toString()));\n    }\n}\n"
}