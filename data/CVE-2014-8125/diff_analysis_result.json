{
    "before_functions": "public Object read(final InputSource in) throws SAXException,\n                                            IOException {\n    if ( this.docFragment == null ) {\n        DocumentBuilderFactory f;\n        try {\n            f =  DocumentBuilderFactory.newInstance();\n        } catch ( FactoryConfigurationError e ) {\n            // obscure JDK1.5 bug where FactoryFinder in the JRE returns a null ClassLoader, so fall back to hard coded xerces.\n            // https://stg.network.org/bugzilla/show_bug.cgi?id=47169\n            // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4633368\n            try {\n                f = (DocumentBuilderFactory) Class.forName( \"org.apache.xerces.jaxp.DocumentBuilderFactoryImpl\" ).newInstance();\n            } catch ( Exception e1 ) {\n                throw new RuntimeException( \"Unable to create new DOM Document\",\n                                            e1 );\n            }\n        } catch ( Exception e ) {\n            throw new RuntimeException( \"Unable to create new DOM Document\",\n                                        e );\n        }\n        \n        try {\n            this.document = f.newDocumentBuilder().newDocument();\n        } catch ( Exception e ) {\n            throw new RuntimeException( \"Unable to create new DOM Document\",\n                                        e );\n        }\n        this.docFragment = this.document.createDocumentFragment();\n    }\n\n    SAXParser localParser = null;\n    if ( this.parser == null ) {\n        SAXParserFactory factory = null;\n        try {\n            factory = SAXParserFactory.newInstance();\n        } catch ( FactoryConfigurationError e) {\n            // obscure JDK1.5 bug where FactoryFinder in the JRE returns a null ClassLoader, so fall back to hard coded xerces.\n            // https://stg.network.org/bugzilla/show_bug.cgi?id=47169\n            // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4633368                \n            try {\n                factory = (SAXParserFactory) Class.forName( \"org.apache.xerces.jaxp.SAXParserFactoryImpl\" ).newInstance();\n            } catch ( Exception e1 ) {\n                throw new RuntimeException( \"Unable to create new DOM Document\",\n                                            e1 );\n            }\n        } catch ( Exception e ) {\n            throw new RuntimeException( \"Unable to create new DOM Document\",\n                                        e );\n        }\n        \n        factory.setNamespaceAware( true );\n\n        final String isValidatingString = System.getProperty( \"drools.schema.validating\" );\n        if ( System.getProperty( \"drools.schema.validating\" ) != null ) {\n            this.isValidating = Boolean.getBoolean( \"drools.schema.validating\" );\n        }\n\n        if ( this.isValidating == true ) {\n            factory.setValidating( true );\n            try {\n                localParser = factory.newSAXParser();\n            } catch ( final ParserConfigurationException e ) {\n                throw new RuntimeException( e.getMessage() );\n            }\n\n            try {\n                localParser.setProperty( ExtensibleXmlParser.JAXP_SCHEMA_LANGUAGE,\n                                         ExtensibleXmlParser.W3C_XML_SCHEMA );\n            } catch ( final SAXNotRecognizedException e ) {\n                boolean hideWarnings = Boolean.getBoolean( \"drools.schema.hidewarnings\" );\n                if ( !hideWarnings ) {\n                    logger.warn( \"Your SAX parser is not JAXP 1.2 compliant - turning off validation.\" );\n                }\n                localParser = null;\n            }\n        }\n\n        if ( localParser == null ) {\n            // not jaxp1.2 compliant so turn off validation\n            try {\n                this.isValidating = false;\n                factory.setValidating( this.isValidating );\n                localParser = factory.newSAXParser();\n            } catch ( final ParserConfigurationException e ) {\n                throw new RuntimeException( e.getMessage() );\n            }\n        }\n    } else {\n        localParser = this.parser;\n    }\n\n    if ( !localParser.isNamespaceAware() ) {\n        throw new RuntimeException( \"parser must be namespace-aware\" );\n    }\n\n    localParser.parse( in,\n                       this );\n\n    return this.data;\n}\n",
    "after_functions": "public Object read(final InputSource in) throws SAXException,\n                                            IOException {\n    if ( this.docFragment == null ) {\n        DocumentBuilderFactory f;\n        try {\n            f =  DocumentBuilderFactory.newInstance();\n        } catch ( FactoryConfigurationError e ) {\n            // obscure JDK1.5 bug where FactoryFinder in the JRE returns a null ClassLoader, so fall back to hard coded xerces.\n            // https://stg.network.org/bugzilla/show_bug.cgi?id=47169\n            // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4633368\n            try {\n                f = (DocumentBuilderFactory) Class.forName( \"org.apache.xerces.jaxp.DocumentBuilderFactoryImpl\" ).newInstance();\n            } catch ( Exception e1 ) {\n                throw new RuntimeException( \"Unable to create new DOM Document\",\n                                            e1 );\n            }\n        } catch ( Exception e ) {\n            throw new RuntimeException( \"Unable to create new DOM Document\",\n                                        e );\n        }\n        // XXE protection start\n        try {\n            f.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n            f.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n\n        } catch (ParserConfigurationException e) {\n            logger.warn(\"Unable to set parser features due to {}\", e.getMessage());\n        }\n        // XXE protection end\n        try {\n            this.document = f.newDocumentBuilder().newDocument();\n        } catch ( Exception e ) {\n            throw new RuntimeException( \"Unable to create new DOM Document\",\n                                        e );\n        }\n        this.docFragment = this.document.createDocumentFragment();\n    }\n\n    SAXParser localParser = null;\n    if ( this.parser == null ) {\n        SAXParserFactory factory = null;\n        try {\n            factory = SAXParserFactory.newInstance();\n        } catch ( FactoryConfigurationError e) {\n            // obscure JDK1.5 bug where FactoryFinder in the JRE returns a null ClassLoader, so fall back to hard coded xerces.\n            // https://stg.network.org/bugzilla/show_bug.cgi?id=47169\n            // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4633368                \n            try {\n                factory = (SAXParserFactory) Class.forName( \"org.apache.xerces.jaxp.SAXParserFactoryImpl\" ).newInstance();\n            } catch ( Exception e1 ) {\n                throw new RuntimeException( \"Unable to create new DOM Document\",\n                                            e1 );\n            }\n        } catch ( Exception e ) {\n            throw new RuntimeException( \"Unable to create new DOM Document\",\n                                        e );\n        }\n        \n        factory.setNamespaceAware( true );\n        // XXE protection start\n        try {\n            factory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n            factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n\n        } catch (ParserConfigurationException e) {\n            logger.warn(\"Unable to set parser features due to {}\", e.getMessage());\n        }\n        // XXE protection end\n\n        final String isValidatingString = System.getProperty( \"drools.schema.validating\" );\n        if ( System.getProperty( \"drools.schema.validating\" ) != null ) {\n            this.isValidating = Boolean.getBoolean( \"drools.schema.validating\" );\n        }\n\n        if ( this.isValidating == true ) {\n            factory.setValidating( true );\n            try {\n                localParser = factory.newSAXParser();\n            } catch ( final ParserConfigurationException e ) {\n                throw new RuntimeException( e.getMessage() );\n            }\n\n            try {\n                localParser.setProperty( ExtensibleXmlParser.JAXP_SCHEMA_LANGUAGE,\n                                         ExtensibleXmlParser.W3C_XML_SCHEMA );\n            } catch ( final SAXNotRecognizedException e ) {\n                boolean hideWarnings = Boolean.getBoolean( \"drools.schema.hidewarnings\" );\n                if ( !hideWarnings ) {\n                    logger.warn( \"Your SAX parser is not JAXP 1.2 compliant - turning off validation.\" );\n                }\n                localParser = null;\n            }\n        }\n\n        if ( localParser == null ) {\n            // not jaxp1.2 compliant so turn off validation\n            try {\n                this.isValidating = false;\n                factory.setValidating( this.isValidating );\n                localParser = factory.newSAXParser();\n            } catch ( final ParserConfigurationException e ) {\n                throw new RuntimeException( e.getMessage() );\n            }\n        }\n    } else {\n        localParser = this.parser;\n    }\n\n    if ( !localParser.isNamespaceAware() ) {\n        throw new RuntimeException( \"parser must be namespace-aware\" );\n    }\n\n    localParser.parse( in,\n                       this );\n\n    return this.data;\n}\n"
}