{
    "general_rule": "Rule: Implement Security Checks for File Path Traversal\n\n1. Type of Improvement:\n   Add validation to ensure that extracted files from archives (e.g., ZIP files) are written only to the intended directory.\n\n2. Benefits:\n   - Prevents potential security vulnerabilities, such as the \"Zip Slip\" attack\n   - Protects against malicious archive contents that may try to overwrite or access files outside the target directory\n   - Enhances overall application security and data integrity\n\n3. Identifying Similar Opportunities:\n   - Review code that handles file extractions from archives or user-supplied file paths\n   - Look for functions that write files based on paths derived from external sources\n   - Examine areas where temporary directories are used for file operations\n   - Audit file I/O operations, especially those involving archives or user input\n\n4. General Application:\n   When extracting files or writing to directories based on external input:\n   a. Determine the canonical path of the target directory\n   b. For each file being written:\n      - Get its canonical path\n      - Verify that the file's path starts with the target directory's path\n   c. If the file's path is outside the target directory, throw an exception or handle the error appropriately\n   d. Implement this check regardless of the specific archive format or file operation being performed\n\nThis rule can be adapted to various programming languages and file-handling scenarios to improve security across different projects."
}