{
    "before_functions": "private static void processZipStream(File dir, InputStream inputStream) throws IOException\n{\n   ZipInputStream zip = new ZipInputStream(inputStream);\n   while (true)\n   {\n      ZipEntry entry = zip.getNextEntry();\n      if (entry == null)\n      {\n         break;\n      }\n\n      File file = new File(dir, entry.getName());\n      if (entry.isDirectory())\n      {\n         FileHelper.mkdirsQuietly(file);\n         continue;\n      }\n\n      File parent = file.getParentFile();\n      if (parent != null)\n      {\n         FileHelper.mkdirsQuietly(parent);\n      }\n\n      FileOutputStream fos = new FileOutputStream(file);\n      byte[] bytes = new byte[1024];\n      int length;\n      while ((length = zip.read(bytes)) >= 0)\n      {\n         fos.write(bytes, 0, length);\n      }\n      fos.close();\n   }\n}\n",
    "after_functions": "private static void processZipStream(File dir, InputStream inputStream) throws IOException\n{\n   String canonicalDestinationDirPath = dir.getCanonicalPath();\n   ZipInputStream zip = new ZipInputStream(inputStream);\n   while (true)\n   {\n      ZipEntry entry = zip.getNextEntry();\n      if (entry == null)\n      {\n         break;\n      }\n\n      File file = new File(dir, entry.getName());\n\n      // https://snyk.io/research/zip-slip-vulnerability\n      String canonicalDestinationFile = file.getCanonicalPath();\n      if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))\n      {\n         throw new IOException(\"Entry is outside of the target dir: \" + entry.getName());\n      }\n\n      if (entry.isDirectory())\n      {\n         FileHelper.mkdirsQuietly(file);\n         continue;\n      }\n\n      File parent = file.getParentFile();\n      if (parent != null)\n      {\n         FileHelper.mkdirsQuietly(parent);\n      }\n\n      FileOutputStream fos = new FileOutputStream(file);\n      byte[] bytes = new byte[1024];\n      int length;\n      while ((length = zip.read(bytes)) >= 0)\n      {\n         fos.write(bytes, 0, length);\n      }\n      fos.close();\n   }\n}\n"
}