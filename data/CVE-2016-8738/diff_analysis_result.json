{
    "before_functions": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n\n    // if there is no value - don't do comparison\n    // if a value is required, a required validator should be added to the field\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n",
    "after_functions": "public void validate(Object object) throws ValidationException {\n    String fieldName = getFieldName();\n    Object value = this.getFieldValue(fieldName, object);\n\n    // if there is no value - don't do comparison\n    // if a value is required, a required validator should be added to the field\n    if (value == null || value.toString().length() == 0) {\n        return;\n    }\n\n    if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value).trim()).matches()) {\n        addFieldError(fieldName, object);\n    }\n}\n"
}