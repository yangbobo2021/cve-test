{
    "before_functions": "@Override\npublic void showWebPage(String url, boolean openExternal, boolean clearHistory, Map<String, Object> params) {\n    LOG.d(TAG, \"showWebPage(%s, %b, %b, HashMap\", url, openExternal, clearHistory);\n\n    // If clearing history\n    if (clearHistory) {\n        engine.clearHistory();\n    }\n\n    // If loading into our webview\n    if (!openExternal) {\n        // Make sure url is in whitelist\n        if (pluginManager.shouldAllowNavigation(url)) {\n            // TODO: What about params?\n            // Load new URL\n            loadUrlIntoView(url, true);\n            return;\n        }\n        // Load in default viewer if not\n        LOG.w(TAG, \"showWebPage: Cannot load URL into webview since it is not in white list.  Loading into browser instead. (URL=\" + url + \")\");\n    }\n    try {\n        // Omitting the MIME type for file: URLs causes \"No Activity found to handle Intent\".\n        // Adding the MIME type to http: URLs causes them to not be handled by the downloader.\n        Intent intent = new Intent(Intent.ACTION_VIEW);\n        Uri uri = Uri.parse(url);\n        if (\"file\".equals(uri.getScheme())) {\n            intent.setDataAndType(uri, resourceApi.getMimeType(uri));\n        } else {\n            intent.setData(uri);\n        }\n        cordova.getActivity().startActivity(intent);\n    } catch (android.content.ActivityNotFoundException e) {\n        LOG.e(TAG, \"Error loading url \" + url, e);\n    }\n}\n",
    "after_functions": "@Override\npublic void showWebPage(String url, boolean openExternal, boolean clearHistory, Map<String, Object> params) {\n    LOG.d(TAG, \"showWebPage(%s, %b, %b, HashMap)\", url, openExternal, clearHistory);\n\n    // If clearing history\n    if (clearHistory) {\n        engine.clearHistory();\n    }\n\n    // If loading into our webview\n    if (!openExternal) {\n        // Make sure url is in whitelist\n        if (pluginManager.shouldAllowNavigation(url)) {\n            // TODO: What about params?\n            // Load new URL\n            loadUrlIntoView(url, true);\n        } else {\n            LOG.w(TAG, \"showWebPage: Refusing to load URL into webview since it is not in the <allow-navigation> whitelist. URL=\" + url);\n        }\n    }\n    if (!pluginManager.shouldOpenExternalUrl(url)) {\n        LOG.w(TAG, \"showWebPage: Refusing to send intent for URL since it is not in the <allow-intent> whitelist. URL=\" + url);\n        return;\n    }\n    try {\n        // Omitting the MIME type for file: URLs causes \"No Activity found to handle Intent\".\n        // Adding the MIME type to http: URLs causes them to not be handled by the downloader.\n        Intent intent = new Intent(Intent.ACTION_VIEW);\n        Uri uri = Uri.parse(url);\n        if (\"file\".equals(uri.getScheme())) {\n            intent.setDataAndType(uri, resourceApi.getMimeType(uri));\n        } else {\n            intent.setData(uri);\n        }\n        cordova.getActivity().startActivity(intent);\n    } catch (android.content.ActivityNotFoundException e) {\n        LOG.e(TAG, \"Error loading url \" + url, e);\n    }\n}\n"
}