{
    "general_rule": "Rule: Implement Security Checks for Path Traversal\n\n1. Type of improvement: \n   Adding input validation to prevent path traversal vulnerabilities\n\n2. Benefits:\n   - Enhances security by blocking malicious attempts to access unauthorized files\n   - Prevents potential data breaches and unauthorized system access\n   - Improves overall application robustness and trustworthiness\n\n3. How to identify similar opportunities:\n   - Look for code that handles file paths, especially those influenced by user input\n   - Review file operations like reading, writing, or extracting files\n   - Examine areas where file or directory names are processed\n   - Focus on functionality related to archives, file uploads, or file system operations\n\n4. General application:\n   - Implement checks for suspicious path patterns (e.g., \"../\" sequences)\n   - Sanitize and validate all user-supplied file paths\n   - Use path canonicalization to resolve and verify final file locations\n   - Apply the principle of least privilege when accessing files and directories\n   - Consider using whitelists of allowed paths or operations where appropriate\n   - Implement logging and error handling for rejected file path attempts"
}