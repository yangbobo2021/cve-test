{
    "general_rule": "Rule: Enhance Security in File System Operations\n\n1. Type of Improvement:\n   Implement secure path resolution and validation when working with file systems, especially when extracting archives or handling user-provided paths.\n\n2. Benefits:\n   - Prevents potential security vulnerabilities such as path traversal attacks\n   - Ensures that operations are confined to intended directories\n   - Reduces the risk of unauthorized access to sensitive files or directories\n\n3. Identifying Opportunities:\n   - Look for file system operations that involve user input or external data\n   - Review code that handles archive extraction or file manipulation\n   - Examine areas where paths are constructed or resolved dynamically\n   - Focus on functions that deal with creating, moving, or accessing files and directories\n\n4. General Application:\n   - Implement path normalization and validation before performing file system operations\n   - Use secure methods for resolving relative paths\n   - Add checks to ensure resolved paths stay within allowed boundaries\n   - Apply the principle of least privilege when accessing files and directories\n   - Consider using built-in security features of the programming language or framework\n   - Implement proper error handling and logging for file system operations\n   - Regularly audit and review file system-related code for potential security issues"
}