{
    "before_functions": "private static void unzip(final ZipFile zip, final Path targetDir) throws IOException {\n    final Enumeration<? extends ZipEntry> entries = zip.entries();\n    while (entries.hasMoreElements()) {\n        final ZipEntry entry = entries.nextElement();\n        final String name = entry.getName();\n        final Path current = targetDir.resolve(name);\n        if (entry.isDirectory()) {\n            if (!Files.exists(current)) {\n                Files.createDirectories(current);\n            }\n        } else {\n            if (Files.notExists(current.getParent())) {\n                Files.createDirectories(current.getParent());\n            }\n            try (final InputStream eis = zip.getInputStream(entry)) {\n                Files.copy(eis, current);\n            }\n        }\n        try {\n            Files.getFileAttributeView(current, BasicFileAttributeView.class).setTimes(entry.getLastModifiedTime(), entry.getLastAccessTime(), entry.getCreationTime());\n        } catch (IOException e) {\n            //ignore, if we cannot set it, world will not end\n        }\n    }\n}\n",
    "after_functions": "private static void unzip(final ZipFile zip, final Path targetDir) throws IOException {\n    final Enumeration<? extends ZipEntry> entries = zip.entries();\n    while (entries.hasMoreElements()) {\n        final ZipEntry entry = entries.nextElement();\n        final String name = entry.getName();\n        final Path current = resolveSecurely(targetDir, name);\n        if (entry.isDirectory()) {\n            if (!Files.exists(current)) {\n                Files.createDirectories(current);\n            }\n        } else {\n            if (Files.notExists(current.getParent())) {\n                Files.createDirectories(current.getParent());\n            }\n            try (final InputStream eis = zip.getInputStream(entry)) {\n                Files.copy(eis, current);\n            }\n        }\n        try {\n            Files.getFileAttributeView(current, BasicFileAttributeView.class).setTimes(entry.getLastModifiedTime(), entry.getLastAccessTime(), entry.getCreationTime());\n        } catch (IOException e) {\n            //ignore, if we cannot set it, world will not end\n        }\n    }\n}\n"
}