{
    "before_functions": "protected boolean evaluate(InputSource inputSource)\n{\n   try\n   {\n      DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n      factory.setNamespaceAware(true);\n      DocumentBuilder dbuilder = factory.newDocumentBuilder();\n      Document doc = dbuilder.parse(inputSource);\n\n      //An XPath expression could return a true or false value instead of a node.\n      //eval() is a better way to determine the boolean value of the exp.\n      //For compliance with legacy behavior where selecting an empty node returns true,\n      //selectNodeIterator is attempted in case of a failure.\n\n      CachedXPathAPI cachedXPathAPI = new CachedXPathAPI();\n      XObject result = cachedXPathAPI.eval(doc, xpath);\n      if (result.bool())\n         return true;\n      else\n      {\n         NodeIterator iterator = cachedXPathAPI.selectNodeIterator(doc, xpath);\n         return (iterator.nextNode() != null);\n      }\n\n   }\n   catch (Throwable e)\n   {\n      return false;\n   }\n}\n",
    "after_functions": "protected boolean evaluate(InputSource inputSource)\n{\n   try\n   {\n      DocumentBuilder dbuilder = createDocumentBuilder();\n      Document doc = dbuilder.parse(inputSource);\n\n      //An XPath expression could return a true or false value instead of a node.\n      //eval() is a better way to determine the boolean value of the exp.\n      //For compliance with legacy behavior where selecting an empty node returns true,\n      //selectNodeIterator is attempted in case of a failure.\n\n      CachedXPathAPI cachedXPathAPI = new CachedXPathAPI();\n      XObject result = cachedXPathAPI.eval(doc, xpath);\n      if (result.bool())\n         return true;\n      else\n      {\n         NodeIterator iterator = cachedXPathAPI.selectNodeIterator(doc, xpath);\n         return (iterator.nextNode() != null);\n      }\n   }\n   catch (Throwable e)\n   {\n      return false;\n   }\n}\n\nprivate DocumentBuilder createDocumentBuilder() throws ParserConfigurationException\n{\n   DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n   factory.setNamespaceAware(true);\n\n   factory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n   factory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n   factory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n\n   return factory.newDocumentBuilder();\n}\n"
}