{
    "before_functions": "private boolean bootstrap(EC2Computer computer, TaskListener listener) throws IOException,\n        InterruptedException, AmazonClientException {\n    logInfo(computer, listener, \"bootstrap()\");\n    Connection bootstrapConn = null;\n    try {\n        int tries = bootstrapAuthTries;\n        boolean isAuthenticated = false;\n        logInfo(computer, listener, \"Getting keypair...\");\n        KeyPair key = computer.getCloud().getKeyPair();\n        logInfo(computer, listener, \"Using key: \" + key.getKeyName() + \"\\n\" + key.getKeyFingerprint() + \"\\n\"\n                + key.getKeyMaterial().substring(0, 160));\n        while (tries-- > 0) {\n            logInfo(computer, listener, \"Authenticating as \" + computer.getRemoteAdmin());\n            try {\n                bootstrapConn = connectToSsh(computer, listener);\n                isAuthenticated = bootstrapConn.authenticateWithPublicKey(computer.getRemoteAdmin(), key.getKeyMaterial().toCharArray(), \"\");\n            } catch(IOException e) {\n                logException(computer, listener, \"Exception trying to authenticate\", e);\n                bootstrapConn.close();\n            }\n            if (isAuthenticated) {\n                break;\n            }\n            logWarning(computer, listener, \"Authentication failed. Trying again...\");\n            Thread.sleep(bootstrapAuthSleepMs);\n        }\n        if (!isAuthenticated) {\n            logWarning(computer, listener, \"Authentication failed\");\n            return false;\n        }\n    } finally {\n        if (bootstrapConn != null) {\n            bootstrapConn.close();\n        }\n    }\n    return true;\n}\n",
    "after_functions": "private boolean bootstrap(EC2Computer computer, TaskListener listener) throws IOException,\n        InterruptedException, AmazonClientException {\n    logInfo(computer, listener, \"bootstrap()\");\n    Connection bootstrapConn = null;\n    try {\n        int tries = bootstrapAuthTries;\n        boolean isAuthenticated = false;\n        logInfo(computer, listener, \"Getting keypair...\");\n        KeyPair key = computer.getCloud().getKeyPair();\n        logInfo(computer, listener,\n            String.format(\"Using private key %s (SHA-1 fingerprint %s)\", key.getKeyName(), key.getKeyFingerprint()));\n        while (tries-- > 0) {\n            logInfo(computer, listener, \"Authenticating as \" + computer.getRemoteAdmin());\n            try {\n                bootstrapConn = connectToSsh(computer, listener);\n                isAuthenticated = bootstrapConn.authenticateWithPublicKey(computer.getRemoteAdmin(), key.getKeyMaterial().toCharArray(), \"\");\n            } catch(IOException e) {\n                logException(computer, listener, \"Exception trying to authenticate\", e);\n                bootstrapConn.close();\n            }\n            if (isAuthenticated) {\n                break;\n            }\n            logWarning(computer, listener, \"Authentication failed. Trying again...\");\n            Thread.sleep(bootstrapAuthSleepMs);\n        }\n        if (!isAuthenticated) {\n            logWarning(computer, listener, \"Authentication failed\");\n            return false;\n        }\n    } finally {\n        if (bootstrapConn != null) {\n            bootstrapConn.close();\n        }\n    }\n    return true;\n}\n"
}