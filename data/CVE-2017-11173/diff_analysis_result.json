{
    "before_functions": "def origins(*args, &blk)\n  @origins = args.flatten.collect do |n|\n    case n\n    when Regexp,\n         /^https?:\\/\\//,\n         'file://'        then n\n    when '*'              then @public_resources = true; n\n    else                  Regexp.compile(\"^[a-z][a-z0-9.+-]*:\\\\\\/\\\\\\/#{Regexp.quote(n)}\")\n    end\n  end.flatten\n  @origins.push(blk) if blk\nend\n",
    "after_functions": "def origins(*args, &blk)\n  @origins = args.flatten.collect do |n|\n    case n\n    when Regexp,\n         /^https?:\\/\\//,\n         'file://'        then n\n    when '*'              then @public_resources = true; n\n    else                  Regexp.compile(\"^[a-z][a-z0-9.+-]*:\\\\\\/\\\\\\/#{Regexp.quote(n)}$\")\n    end\n  end.flatten\n  @origins.push(blk) if blk\nend\n"
}