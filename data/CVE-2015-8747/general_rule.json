{
    "general_rule": "Rule: Implement Input Validation for File System Operations\n\n1. Type of Improvement:\n   Adding input validation checks before performing file system operations.\n\n2. Benefits:\n   - Enhances security by preventing potential exploits or unauthorized access\n   - Reduces the risk of errors or crashes due to invalid input\n   - Improves code robustness and reliability\n\n3. Identifying Similar Opportunities:\n   - Look for functions or methods that interact with the file system\n   - Examine operations that use user-provided or externally sourced input for file paths or names\n   - Review areas where file or directory names are constructed dynamically\n\n4. General Application:\n   - Implement validation checks for file and directory names before using them in file system operations\n   - Use appropriate sanitization techniques to ensure input conforms to expected formats and character sets\n   - Log or handle cases where input fails validation, rather than proceeding with potentially unsafe operations\n   - Consider using built-in or well-established libraries for path manipulation and validation when available\n   - Apply this principle to all code that interacts with external resources, not just file systems (e.g., databases, network operations)"
}