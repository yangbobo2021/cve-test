{
    "before_functions": "def write(self):\n    self._create_dirs()\n    for component in self.components:\n        text = ical.serialize(\n            self.tag, self.headers, [component] + self.timezones)\n        name = (\n            component.name if sys.version_info[0] >= 3 else\n            component.name.encode(filesystem.FILESYSTEM_ENCODING))\n        filesystem_path = os.path.join(self._filesystem_path, name)\n        with filesystem.open(filesystem_path, \"w\") as fd:\n            fd.write(text)\n\ndef remove(self, name):\n    filesystem_path = os.path.join(self._filesystem_path, name)\n    if os.path.exists(filesystem_path):\n        os.remove(filesystem_path)\n",
    "after_functions": "def write(self):\n    self._create_dirs()\n    for component in self.components:\n        text = ical.serialize(\n            self.tag, self.headers, [component] + self.timezones)\n        name = (\n            component.name if sys.version_info[0] >= 3 else\n            component.name.encode(filesystem.FILESYSTEM_ENCODING))\n        if not pathutils.is_safe_filesystem_path_component(name):\n            log.LOGGER.debug(\n                \"Can't tranlate name safely to filesystem, \"\n                \"skipping component: %s\", name)\n            continue\n        filesystem_path = os.path.join(self._filesystem_path, name)\n        with filesystem.open(filesystem_path, \"w\") as fd:\n            fd.write(text)\n\ndef remove(self, name):\n    if not pathutils.is_safe_filesystem_path_component(name):\n        log.LOGGER.debug(\n            \"Can't tranlate name safely to filesystem, \"\n            \"skipping component: %s\", name)\n        return\n    filesystem_path = os.path.join(self._filesystem_path, name)\n    if os.path.exists(filesystem_path):\n        os.remove(filesystem_path)\n"
}