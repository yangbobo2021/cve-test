{
    "general_rule": "Rule: Simplify and standardize string formatting\n\n1. Type of improvement:\n   Replace complex string formatting with simpler, more consistent methods\n\n2. Benefits:\n   - Improves code readability and maintainability\n   - Reduces potential for errors in string construction\n   - Makes the code easier to update and modify in the future\n\n3. How to identify opportunities:\n   - Look for areas where strings are being constructed with multiple replacements or formatting operations\n   - Identify inconsistent string formatting methods within the same codebase\n   - Search for string manipulations that use older or less efficient formatting techniques\n\n4. General application:\n   - Choose a standard string formatting method for the project (e.g., f-strings, .format(), template strings)\n   - Replace complex concatenations or multiple replacements with a single, clear formatting operation\n   - Use named placeholders instead of positional ones for better clarity\n   - Consider creating utility functions for commonly used string formatting patterns\n   - Ensure consistent formatting style throughout the codebase"
}