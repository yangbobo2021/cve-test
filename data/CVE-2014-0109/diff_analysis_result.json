{
    "before_functions": "public void handleMessage(Message message) {\n    if (isGET(message) || message.getContent(XMLStreamReader.class) != null) {\n        LOG.fine(\"StaxInInterceptor skipped.\");\n        return;\n    }\n    InputStream is = message.getContent(InputStream.class);\n    Reader reader = null;\n    if (is == null) {\n        reader = message.getContent(Reader.class);\n        if (reader == null) {\n            return;\n        }\n    }\n    String contentType = (String)message.get(Message.CONTENT_TYPE);\n    \n    if (contentType != null && contentType.contains(\"text/html\")) {\n        String htmlMessage = null;\n        try {\n            htmlMessage = IOUtils.toString(is, 500);\n        } catch (IOException e) {\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                    LOG, \"(none)\"));\n        }\n        throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                LOG, (htmlMessage == null || htmlMessage.length() == 0) ? \"(none)\" : htmlMessage));\n    }\n    if (contentType == null) {\n        //if contentType is null, this is likely a an empty post/put/delete/similar, lets see if it's\n        //detectable at all\n        Map<String, List<String>> m = CastUtils.cast((Map<?, ?>)message.get(Message.PROTOCOL_HEADERS));\n        if (m != null) {\n            List<String> contentLen = HttpHeaderHelper\n                .getHeader(m, HttpHeaderHelper.CONTENT_LENGTH);\n            List<String> contentTE = HttpHeaderHelper\n                .getHeader(m, HttpHeaderHelper.CONTENT_TRANSFER_ENCODING);\n            if ((StringUtils.isEmpty(contentLen) || \"0\".equals(contentLen.get(0)))\n                && StringUtils.isEmpty(contentTE)) {\n                return;\n            }\n        }\n    }\n\n    String encoding = (String)message.get(Message.ENCODING);\n\n    XMLStreamReader xreader;\n    try {\n        XMLInputFactory factory = getXMLInputFactory(message);\n        if (factory == null) {\n            if (reader != null) {\n                xreader = StaxUtils.createXMLStreamReader(reader);\n            } else {\n                xreader = StaxUtils.createXMLStreamReader(is, encoding);\n            }\n        } else {\n            synchronized (factory) {\n                if (reader != null) {\n                    xreader = factory.createXMLStreamReader(reader);\n                } else {\n                    xreader = factory.createXMLStreamReader(is, encoding);\n                }\n            }                \n        }\n        xreader = configureRestrictions(xreader, message);\n    } catch (XMLStreamException e) {\n        throw new Fault(new org.apache.cxf.common.i18n.Message(\"STREAM_CREATE_EXC\",\n                                                               LOG,\n                                                               encoding), e);\n    }\n    message.setContent(XMLStreamReader.class, xreader);\n    message.getInterceptorChain().add(StaxInEndingInterceptor.INSTANCE);\n}\n",
    "after_functions": "public void handleMessage(Message message) {\n    if (isGET(message) || message.getContent(XMLStreamReader.class) != null) {\n        LOG.fine(\"StaxInInterceptor skipped.\");\n        return;\n    }\n    InputStream is = message.getContent(InputStream.class);\n    Reader reader = null;\n    if (is == null) {\n        reader = message.getContent(Reader.class);\n        if (reader == null) {\n            return;\n        }\n    }\n    String contentType = (String)message.get(Message.CONTENT_TYPE);\n    \n    if (contentType != null \n        && contentType.contains(\"text/html\")\n        && MessageUtils.isRequestor(message)) {\n        StringBuilder htmlMessage = new StringBuilder(1024);\n        try {\n            if (reader == null) {\n                reader = new InputStreamReader(is, (String)message.get(Message.ENCODING));\n            }\n            char s[] = new char[1024];\n            int i = reader.read(s);\n            while (htmlMessage.length() < 64536 && i > 0) {\n                htmlMessage.append(s, 0, i);\n                i = reader.read(s);\n            }\n        } catch (IOException e) {\n            throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                    LOG, \"(none)\"));\n        }\n        throw new Fault(new org.apache.cxf.common.i18n.Message(\"INVALID_HTML_RESPONSETYPE\",\n                LOG, (htmlMessage == null || htmlMessage.length() == 0) ? \"(none)\" : htmlMessage));\n    }\n    if (contentType == null) {\n        //if contentType is null, this is likely a an empty post/put/delete/similar, lets see if it's\n        //detectable at all\n        Map<String, List<String>> m = CastUtils.cast((Map<?, ?>)message.get(Message.PROTOCOL_HEADERS));\n        if (m != null) {\n            List<String> contentLen = HttpHeaderHelper\n                .getHeader(m, HttpHeaderHelper.CONTENT_LENGTH);\n            List<String> contentTE = HttpHeaderHelper\n                .getHeader(m, HttpHeaderHelper.CONTENT_TRANSFER_ENCODING);\n            if ((StringUtils.isEmpty(contentLen) || \"0\".equals(contentLen.get(0)))\n                && StringUtils.isEmpty(contentTE)) {\n                return;\n            }\n        }\n    }\n\n    String encoding = (String)message.get(Message.ENCODING);\n\n    XMLStreamReader xreader;\n    try {\n        XMLInputFactory factory = getXMLInputFactory(message);\n        if (factory == null) {\n            if (reader != null) {\n                xreader = StaxUtils.createXMLStreamReader(reader);\n            } else {\n                xreader = StaxUtils.createXMLStreamReader(is, encoding);\n            }\n        } else {\n            synchronized (factory) {\n                if (reader != null) {\n                    xreader = factory.createXMLStreamReader(reader);\n                } else {\n                    xreader = factory.createXMLStreamReader(is, encoding);\n                }\n            }                \n        }\n        xreader = configureRestrictions(xreader, message);\n    } catch (XMLStreamException e) {\n        throw new Fault(new org.apache.cxf.common.i18n.Message(\"STREAM_CREATE_EXC\",\n                                                               LOG,\n                                                               encoding), e);\n    }\n    message.setContent(XMLStreamReader.class, xreader);\n    message.getInterceptorChain().add(StaxInEndingInterceptor.INSTANCE);\n}\n"
}