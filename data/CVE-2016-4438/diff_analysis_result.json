{
    "before_functions": "private void handleDynamicMethodInvocation(ActionMapping mapping, String name) {\n    int exclamation = name.lastIndexOf(\"!\");\n    if (exclamation != -1) {\n        String actionName = name.substring(0, exclamation);\n        String actionMethod = name.substring(exclamation + 1);\n\n        // WW-4585\n        // add any ; appendix to name, it will be handled later in getMapping method\n        int scPos = actionMethod.indexOf(';');\n        if (scPos != -1) {\n            actionName = actionName + actionMethod.substring(scPos);\n            actionMethod = actionMethod.substring(0, scPos);\n        }\n\n        mapping.setName(actionName);\n        if (allowDynamicMethodCalls) {\n            mapping.setMethod(actionMethod);\n        } else {\n            mapping.setMethod(null);\n        }\n    }\n}\n",
    "after_functions": "private void handleDynamicMethodInvocation(ActionMapping mapping, String name) {\n    int exclamation = name.lastIndexOf(\"!\");\n    if (exclamation != -1) {\n        String actionName = name.substring(0, exclamation);\n        String actionMethod = name.substring(exclamation + 1);\n\n        // WW-4585\n        // add any ; appendix to name, it will be handled later in getMapping method\n        int scPos = actionMethod.indexOf(';');\n        if (scPos != -1) {\n            actionName = actionName + actionMethod.substring(scPos);\n            actionMethod = actionMethod.substring(0, scPos);\n        }\n\n        mapping.setName(actionName);\n        if (allowDynamicMethodCalls) {\n            mapping.setMethod(cleanupActionName(actionMethod));\n        } else {\n            mapping.setMethod(null);\n        }\n    }\n}\n"
}