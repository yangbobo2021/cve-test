{
    "general_rule": "Rule: Remove Commented-Out Code\n\n1. Type of improvement:\n   Removing commented-out code that is no longer needed or relevant.\n\n2. Benefits:\n   - Improves code readability by reducing clutter\n   - Eliminates confusion about which code is active and which is not\n   - Reduces file size and maintenance overhead\n   - Prevents outdated or incorrect code from being accidentally reintroduced\n\n3. How to identify similar opportunities:\n   - Look for blocks of code that are entirely commented out\n   - Pay attention to single-line comments that appear to be disabling functionality\n   - Review version control history to identify code that was commented out instead of being properly removed\n   - Use static code analysis tools that can detect and flag commented-out code\n\n4. General applicability:\n   This rule can be applied to any codebase in any programming language. It's particularly useful in long-lived projects where code evolves over time and old implementations may be left as comments \"just in case.\"\n\nBest practices:\n- Rely on version control systems to maintain code history instead of keeping old code as comments\n- If explanatory comments are needed, write them as actual comments rather than commented-out code\n- Regularly review and clean up code to remove unnecessary comments and dead code\n- Encourage team members to remove code instead of commenting it out when it's no longer needed"
}