{
    "before_functions": "@Override\npublic void evaluateRequest(final HttpServerRequest request) throws HttpAuthenticationException {\n    // try to re-authenticate based on a previously cached identity\n    if (attemptReAuthentication(request)) {\n        return;\n    }\n\n    // Is current request an authentication attempt?\n    if (POST.equals(request.getRequestMethod()) && request.getRequestURI().getPath().endsWith(postLocation)) {\n        attemptAuthentication(request);\n        return;\n    }\n\n    // Register challenger\n    if (loginPage != null) {\n        request.noAuthenticationInProgress((response) -> sendLogin(request, response));\n    }\n}\n",
    "after_functions": "@Override\npublic void evaluateRequest(final HttpServerRequest request) throws HttpAuthenticationException {\n    // try to re-authenticate based on a previously cached identity\n    if (attemptReAuthentication(request)) {\n        return;\n    }\n\n    // Is current request an authentication attempt?\n    if (POST.equals(request.getRequestMethod()) && isAuthenticationRequest(request.getRequestURI().getPath())) {\n        attemptAuthentication(request);\n        return;\n    }\n\n    // Register challenger\n    if (loginPage != null) {\n        request.noAuthenticationInProgress((response) -> sendLogin(request, response));\n    }\n}\n\nprivate boolean isAuthenticationRequest(final String path) {\n    int lastSlash = path.lastIndexOf('/');\n    int pathParam = path.indexOf(';', lastSlash > 0 ? lastSlash : 0);\n    String target = path.substring(lastSlash >= 0 ? lastSlash + 1 : 0, pathParam > 0 ? pathParam : path.length());\n\n    return target.equals(postLocation);\n}\n"
}