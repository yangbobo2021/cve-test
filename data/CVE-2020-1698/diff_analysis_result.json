{
    "before_functions": "public R execute(HttpResponseProcessor<R> responseProcessor) {\n    byte[] bytes = null;\n\n    try {\n        for (Map.Entry<String, String> header : this.headers.entrySet()) {\n            this.builder.setHeader(header.getKey(), header.getValue());\n        }\n\n        preExecute(this.builder);\n\n        HttpResponse response = this.httpClient.execute(this.builder.build());\n        HttpEntity entity = response.getEntity();\n\n        if (entity != null) {\n            bytes = EntityUtils.toByteArray(entity);\n        }\n\n        StatusLine statusLine = response.getStatusLine();\n        int statusCode = statusLine.getStatusCode();\n\n        if (statusCode < 200 || statusCode >= 300) {\n            throw new HttpResponseException(\"Unexpected response from server: \" + statusCode + \" / \" + statusLine.getReasonPhrase(), statusCode, statusLine.getReasonPhrase(), bytes);\n        }\n\n        if (bytes == null) {\n            return null;\n        }\n\n        return responseProcessor.process(bytes);\n    } catch (HttpResponseException e) {\n        throw e;\n    } catch (Exception e) {\n        throw new RuntimeException(\"Error executing http method [\" + builder + \"]. Response : \" + String.valueOf(bytes), e);\n    }\n}\n",
    "after_functions": "public R execute(HttpResponseProcessor<R> responseProcessor) {\n    byte[] bytes = null;\n\n    try {\n        for (Map.Entry<String, String> header : this.headers.entrySet()) {\n            this.builder.setHeader(header.getKey(), header.getValue());\n        }\n\n        preExecute(this.builder);\n\n        HttpResponse response = this.httpClient.execute(this.builder.build());\n        HttpEntity entity = response.getEntity();\n\n        if (entity != null) {\n            bytes = EntityUtils.toByteArray(entity);\n        }\n\n        StatusLine statusLine = response.getStatusLine();\n        int statusCode = statusLine.getStatusCode();\n\n        if (statusCode < 200 || statusCode >= 300) {\n            throw new HttpResponseException(\"Unexpected response from server: \" + statusCode + \" / \" + statusLine.getReasonPhrase(), statusCode, statusLine.getReasonPhrase(), bytes);\n        }\n\n        if (bytes == null) {\n            return null;\n        }\n\n        return responseProcessor.process(bytes);\n    } catch (HttpResponseException e) {\n        throw e;\n    } catch (Exception e) {\n        throw new RuntimeException(\"Error executing http method [\" + builder.getMethod() + \"]. Response : \" + String.valueOf(bytes), e);\n    }\n}\n"
}