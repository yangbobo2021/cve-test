{
    "general_rule": "Rule: Simplify and Standardize Unique Identifier Generation\n\n1. Type of Improvement:\n   Replace custom identifier generation logic with standardized library functions.\n\n2. Benefits:\n   - Improves code readability and maintainability\n   - Reduces potential for errors in custom logic\n   - Leverages well-tested, optimized library functions\n   - Enhances security by using cryptographically strong random generators\n   - Simplifies the code, making it easier to understand and modify\n\n3. Identifying Similar Opportunities:\n   - Look for methods that generate unique identifiers or tokens\n   - Search for custom implementations of random string generation\n   - Identify areas where timestamps or other custom data are used to create unique values\n   - Review security-sensitive areas that require strong randomness\n\n4. General Application:\n   - Replace custom identifier generation with language-specific or widely-used library functions for generating UUIDs or secure random strings\n   - Ensure the chosen method provides sufficient randomness and uniqueness for the specific use case\n   - Consider the performance implications of the chosen method, especially for high-frequency operations\n   - Document the change and update any related tests or dependencies"
}