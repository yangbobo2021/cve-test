{
    "before_functions": "def async_run(prog, args):\n    pid = os.fork()\n    if pid:\n        os.waitpid(pid, 0)\n    else:\n        dpid = os.fork()\n        if not dpid:\n            os.system(\" \".join([prog] + args))\n        os._exit(0)\n\ndef process_statistics(self, metadata, _):\n    args = [metadata.hostname, '-p', metadata.profile, '-g',\n            ':'.join([g for g in metadata.groups])]\n    for notifier in os.listdir(self.data):\n        if ((notifier[-1] == '~') or\n            (notifier[:2] == '.#') or\n            (notifier[-4:] == '.swp') or\n            (notifier in ['SCCS', '.svn', '4913'])):\n            continue\n        npath = self.data + '/' + notifier\n        self.logger.debug(\"Running %s %s\" % (npath, \" \".join(args)))\n        async_run(npath, args)\n",
    "after_functions": "def async_run(self, args):\n    pid = os.fork()\n    if pid:\n        os.waitpid(pid, 0)\n    else:\n        dpid = os.fork()\n        if not dpid:\n            self.debug_log(\"Running %s\" % \" \".join(pipes.quote(a)\n                                                   for a in args))\n            proc = Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n            (out, err) = proc.communicate()\n            rv = proc.wait()\n            if rv != 0:\n                self.logger.error(\"Trigger: Error running %s (%s): %s\" %\n                                  (args[0], rv, err))\n            elif err:\n                self.debug_log(\"Trigger: Error: %s\" % err)\n        os._exit(0)\n\ndef process_statistics(self, metadata, _):\n    args = [metadata.hostname, '-p', metadata.profile, '-g',\n            ':'.join([g for g in metadata.groups])]\n    self.debug_log(\"running triggers\")\n    for notifier in os.listdir(self.data):\n        self.debug_log(\"running %s\" % notifier)\n        if ((notifier[-1] == '~') or\n            (notifier[:2] == '.#') or\n            (notifier[-4:] == '.swp') or\n            (notifier in ['SCCS', '.svn', '4913'])):\n            continue\n        npath = os.path.join(self.data, notifier)\n        self.async_run([npath] + args)\n"
}