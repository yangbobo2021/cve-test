{
    "general_rule": "Rule: Implement Input Validation and Error Handling\n\n1. Type of Improvement:\n   Add checks to validate input data before processing.\n\n2. Benefits:\n   - Enhances program robustness and reliability\n   - Prevents potential crashes or unexpected behavior\n   - Provides clearer error messages for debugging\n   - Improves security by reducing vulnerabilities from malformed input\n\n3. How to Identify Opportunities:\n   - Look for functions that read external data (files, user input, network data)\n   - Examine areas where assumptions are made about input size or format\n   - Review error-prone operations like memory allocation or file operations\n   - Consider edge cases and potential invalid inputs\n\n4. General Application:\n   - Add size checks for input data to ensure it meets minimum requirements\n   - Validate input format or structure before processing\n   - Implement appropriate error handling and messaging\n   - Return meaningful error codes or exceptions when validation fails\n   - Consider using assertions for internal consistency checks"
}