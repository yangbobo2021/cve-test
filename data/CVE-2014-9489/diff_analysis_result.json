{
    "before_functions": "def grep(query, options={})\n  ref = options[:ref] ? options[:ref] : \"HEAD\"\n  args = [{}, '-I', '-i', '-c', query, ref, '--']\n  args << options[:path] if options[:path]\n  result = @git.grep(*args).split(\"\\n\")\n  result.map do |line|\n    branch_and_name, _, count = line.rpartition(\":\")\n    branch, _, name = branch_and_name.partition(':')\n    {:name => name, :count => count}\n  end\nend\n\ndef ls_files(query, options = {})\n  options[:ref] = options[:ref] ? options[:ref] : \"HEAD\"\n  @git.ls_files({}, \"*#{query}*\").split(\"\\n\")\nend\n",
    "after_functions": "def grep(query, options={})\n  ref = options[:ref] ? options[:ref] : \"HEAD\"\n  query = Shellwords.split(query).select {|q| !(q =~ /^(-O)|(--open-files-in-pager)/) }\n  query = Shellwords.join(query)\n  args = [{}, '-I', '-i', '-c', query, ref, '--']\n  args << options[:path] if options[:path]\n  result = @git.grep(*args).split(\"\\n\")\n  result.map do |line|\n    branch_and_name, _, count = line.rpartition(\":\")\n    branch, _, name = branch_and_name.partition(':')\n    {:name => name, :count => count}\n  end\nend\n\ndef ls_files(query, options = {})\n  options[:ref] = options[:ref] ? options[:ref] : \"HEAD\"\n  query = Shellwords.shellescape(query)\n  @git.ls_files({}, \"*#{query}*\").split(\"\\n\")\nend\n"
}