{
    "before_functions": "def __init__(self, pidfile=None):\n    if not pidfile:\n        self.pidfile = \"/tmp/%s.pid\" % self.__class__.__name__.lower()\n    else:\n        self.pidfile = pidfile\n\ndef process_command_line(self, argv, verbose=1):\n    usage = \"usage:  %s  start | stop | restart | status | debug \" \\\n            \"(run as non-daemon)\" % os.path.basename(argv[0])\n    if len(argv) < 2:\n        print usage\n        raise SystemExit\n    else:\n        operation = argv[1]\n    pid = self.get_pid()\n    if operation == 'status':\n        if self.is_process_running():\n            print \"Server process %s is running.\" % pid\n        else:\n            print \"Server is not running.\"\n    elif operation == 'start':\n        if self.is_process_running():\n            print \"Server process %s is already running.\" % pid\n            raise SystemExit\n        else:\n            if verbose:\n                print \"Starting server process.\"\n            self.daemon_start()\n    elif operation == 'stop':\n        if self.is_process_running():\n            self.daemon_stop()\n            if verbose:\n                print \"Server process %s stopped.\" % pid\n        else:\n            print \"Server process %s is not running.\" % pid\n            raise SystemExit\n    elif operation == 'restart':\n        self.daemon_stop()\n        if verbose:\n            print \"Restarting server process.\"\n        self.daemon_start()\n    elif operation == 'debug':\n        self.daemon_start(0)\n    else:\n        print \"Unknown operation:\", operation\n        raise SystemExit\n",
    "after_functions": "def __init__(self, pidfile=None):\n    if not pidfile:\n        # PID file moved out of /tmp to avoid security vulnerability\n        # changed by Debian maintainer per Debian bug #631912\n        self.pidfile = \"/var/run/pyro-%s.pid\" % self.__class__.__name__.lower()\n    else:\n        self.pidfile = pidfile\n\ndef process_command_line(self, argv, verbose=1):\n    usage = \"usage:  %s  start | stop | restart | status | debug \" \\\n            \"[--pidfile=...] \" \\\n            \"(run as non-daemon)\" % os.path.basename(argv[0])\n    if len(argv) < 2:\n        print usage\n        raise SystemExit\n    else:\n        operation = argv[1]\n        if len(argv) > 2 and argv[2].startswith('--pidfile=') and \\\n            len(argv[2]) > len('--pidfile='):\n            self.pidfile = argv[2][len('--pidfile='):]\n    pid = self.get_pid()\n    if operation == 'status':\n        if self.is_process_running():\n            print \"Server process %s is running.\" % pid\n        else:\n            print \"Server is not running.\"\n    elif operation == 'start':\n        if self.is_process_running():\n            print \"Server process %s is already running.\" % pid\n            raise SystemExit\n        else:\n            if verbose:\n                print \"Starting server process.\"\n            self.daemon_start()\n    elif operation == 'stop':\n        if self.is_process_running():\n            self.daemon_stop()\n            if verbose:\n                print \"Server process %s stopped.\" % pid\n        else:\n            print \"Server process %s is not running.\" % pid\n            raise SystemExit\n    elif operation == 'restart':\n        self.daemon_stop()\n        if verbose:\n            print \"Restarting server process.\"\n        self.daemon_start()\n    elif operation == 'debug':\n        self.daemon_start(0)\n    else:\n        print \"Unknown operation:\", operation\n        raise SystemExit\n"
}