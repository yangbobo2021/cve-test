{
    "general_rule": "Rule: Centralize and Standardize File Operations\n\n1. Type of Improvement:\n   Consolidate repeated file handling operations into a single, reusable method.\n\n2. Benefits:\n   - Improves code maintainability by reducing duplication\n   - Enhances consistency in file operations across the codebase\n   - Simplifies error handling and logging for file-related tasks\n   - Makes it easier to modify or update file handling logic in one place\n\n3. How to Identify Opportunities:\n   - Look for repeated patterns of file path construction or file I/O operations\n   - Identify multiple occurrences of similar error handling for file operations\n   - Search for hardcoded file paths or directory structures used in multiple places\n   - Notice any inconsistencies in how temporary files or directories are managed\n\n4. General Application:\n   - Create a utility method or class to handle common file operations\n   - Use configuration or environment variables for base paths instead of hardcoding\n   - Implement robust error handling and logging within the centralized method\n   - Ensure the method is flexible enough to handle various file types and operations\n   - Consider making the method testable by allowing injection of file system interfaces\n\nThis rule can be applied to various projects and languages where file operations are common, helping to create more maintainable and robust code."
}