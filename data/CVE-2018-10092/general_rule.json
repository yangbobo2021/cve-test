{
    "general_rule": "Rule: Enhance Input Validation and Sanitization\n\n1. Type of Improvement:\n   Implement stronger input validation and sanitization techniques for user-supplied data, especially for sensitive operations or system commands.\n\n2. Benefits:\n   - Improves security by reducing the risk of injection attacks and malicious input\n   - Enhances system stability by ensuring only valid data is processed\n   - Reduces the likelihood of unexpected behavior or crashes due to invalid input\n\n3. Identifying Opportunities:\n   - Look for areas in the code where user input is directly used in system operations, database queries, or command executions\n   - Review input handling for configuration settings, especially those related to system paths or commands\n   - Examine any code that processes file uploads or handles file operations\n\n4. General Application:\n   - Implement input validation checks to ensure data meets expected formats and ranges\n   - Apply sanitization techniques appropriate for the context (e.g., escaping special characters, removing potentially dangerous content)\n   - Use parameterized queries or prepared statements for database operations\n   - Employ whitelisting for allowed characters or values when possible\n   - Consider using existing security libraries or functions designed for input sanitization\n   - Implement additional layers of validation for highly sensitive operations"
}