{
    "before_functions": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n        // srlist... hashed public keys\n        for (int i = 0; i < this.rcount; i++) {\n            for (int j = 0; j < this.hashSize; j++) {\n                //  ZipUtil.signedByteToUnsignedInt(data[offset + 16 + (i * this.hashSize) + j]));\n            }\n        }\n    }\n}\n",
    "after_functions": "public void parseCentralDirectoryFormat(final byte[] data, final int offset, final int length) {\n    this.format = ZipShort.getValue(data, offset);\n    this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));\n    this.bitlen = ZipShort.getValue(data, offset + 4);\n    this.flags = ZipShort.getValue(data, offset + 6);\n    this.rcount = ZipLong.getValue(data, offset + 8);\n\n    if (rcount > 0) {\n        this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));\n        this.hashSize = ZipShort.getValue(data, offset + 14);\n        // srlist... hashed public keys\n        for (long i = 0; i < this.rcount; i++) {\n            for (int j = 0; j < this.hashSize; j++) {\n                //  ZipUtil.signedByteToUnsignedInt(data[offset + 16 + (i * this.hashSize) + j]));\n            }\n        }\n    }\n}\n"
}