{
    "before_functions": "/**\n * Send an email to the admin address\n * @throws IOException\n * @throws ServletException\n * @throws InterruptedException\n */\npublic FormValidation doSendTestMail(\n        @QueryParameter String smtpServer, @QueryParameter String adminAddress, @QueryParameter boolean useSMTPAuth,\n        @QueryParameter String smtpAuthUserName, @QueryParameter Secret smtpAuthPasswordSecret,\n        @QueryParameter boolean useSsl, @QueryParameter String smtpPort, @QueryParameter String charset,\n        @QueryParameter String sendTestMailTo) throws IOException, ServletException, InterruptedException {\n    try {\n        // TODO 1.590+ Jenkins.getActiveInstance\n        final Jenkins jenkins = Jenkins.getInstance();\n        if (jenkins == null) {\n            throw new IOException(\"Jenkins instance is not ready\");\n        }\n        \n        if (!useSMTPAuth) {\n            smtpAuthUserName = null;\n            smtpAuthPasswordSecret = null;\n        }\n        \n        MimeMessage msg = new MimeMessage(createSession(smtpServer, smtpPort, useSsl, smtpAuthUserName, smtpAuthPasswordSecret));\n        msg.setSubject(Messages.Mailer_TestMail_Subject(testEmailCount.incrementAndGet()), charset);\n        msg.setText(Messages.Mailer_TestMail_Content(testEmailCount.get(), jenkins.getDisplayName()), charset);\n        msg.setFrom(stringToAddress(adminAddress, charset));\n        if (StringUtils.isNotBlank(replyToAddress)) {\n            msg.setReplyTo(new Address[]{stringToAddress(replyToAddress, charset)});\n        }\n        msg.setSentDate(new Date());\n        msg.setRecipient(Message.RecipientType.TO, stringToAddress(sendTestMailTo, charset));\n\n        Transport.send(msg);                \n        return FormValidation.ok(Messages.Mailer_EmailSentSuccessfully());\n    } catch (MessagingException e) {\n        return FormValidation.errorWithMarkup(\"<p>\"+Messages.Mailer_FailedToSendEmail()+\"</p><pre>\"+Util.escape(Functions.printThrowable(e))+\"</pre>\");\n    }\n}\n",
    "after_functions": "/**\n * Send an email to the admin address\n * @throws IOException\n * @throws ServletException\n * @throws InterruptedException\n */\n@RequirePOST\npublic FormValidation doSendTestMail(\n        @QueryParameter String smtpServer, @QueryParameter String adminAddress, @QueryParameter boolean useSMTPAuth,\n        @QueryParameter String smtpAuthUserName, @QueryParameter Secret smtpAuthPasswordSecret,\n        @QueryParameter boolean useSsl, @QueryParameter String smtpPort, @QueryParameter String charset,\n        @QueryParameter String sendTestMailTo) throws IOException, ServletException, InterruptedException {\n    try {\n        // TODO 1.590+ Jenkins.getActiveInstance\n        final Jenkins jenkins = Jenkins.getInstance();\n        if (jenkins == null) {\n            throw new IOException(\"Jenkins instance is not ready\");\n        }\n\n        jenkins.checkPermission(Jenkins.ADMINISTER);\n        \n        if (!useSMTPAuth) {\n            smtpAuthUserName = null;\n            smtpAuthPasswordSecret = null;\n        }\n        \n        MimeMessage msg = new MimeMessage(createSession(smtpServer, smtpPort, useSsl, smtpAuthUserName, smtpAuthPasswordSecret));\n        msg.setSubject(Messages.Mailer_TestMail_Subject(testEmailCount.incrementAndGet()), charset);\n        msg.setText(Messages.Mailer_TestMail_Content(testEmailCount.get(), jenkins.getDisplayName()), charset);\n        msg.setFrom(stringToAddress(adminAddress, charset));\n        if (StringUtils.isNotBlank(replyToAddress)) {\n            msg.setReplyTo(new Address[]{stringToAddress(replyToAddress, charset)});\n        }\n        msg.setSentDate(new Date());\n        msg.setRecipient(Message.RecipientType.TO, stringToAddress(sendTestMailTo, charset));\n\n        Transport.send(msg);                \n        return FormValidation.ok(Messages.Mailer_EmailSentSuccessfully());\n    } catch (MessagingException e) {\n        return FormValidation.errorWithMarkup(\"<p>\"+Messages.Mailer_FailedToSendEmail()+\"</p><pre>\"+Util.escape(Functions.printThrowable(e))+\"</pre>\");\n    }\n}\n"
}