{
    "before_functions": "protected function redirectToOriginalAccount(Account $account)\n{\n    /** @var Transaction $transaction */\n    $transaction = $account->transactions()->first();\n    if (null === $transaction) {\n        app('session')->flash('error', trans('firefly.account_missing_transaction', ['name' => $account->name, 'id' => $account->id]));\n        Log::error(sprintf('Expected a transaction. Account #%d has none. BEEP, error.', $account->id));\n\n        return redirect(route('index'));\n    }\n\n    $journal = $transaction->transactionJournal;\n    /** @var Transaction $opposingTransaction */\n    $opposingTransaction = $journal->transactions()->where('transactions.id', '!=', $transaction->id)->first();\n\n    if (null === $opposingTransaction) {\n        app('session')->flash('error', trans('firefly.account_missing_transaction', ['name' => $account->name, 'id' => $account->id]));\n        Log::error(sprintf('Expected an opposing transaction. Account #%d has none. BEEP, error.', $account->id));\n    }\n\n    return redirect(route('accounts.show', [$opposingTransaction->account_id]));\n}\n",
    "after_functions": "protected function redirectToOriginalAccount(Account $account)\n{\n    /** @var Transaction $transaction */\n    $transaction = $account->transactions()->first();\n    if (null === $transaction) {\n        app('session')->flash('error', trans('firefly.account_missing_transaction', ['name' => e($account->name), 'id' => $account->id]));\n        Log::error(sprintf('Expected a transaction. Account #%d has none. BEEP, error.', $account->id));\n\n        return redirect(route('index'));\n    }\n\n    $journal = $transaction->transactionJournal;\n    /** @var Transaction $opposingTransaction */\n    $opposingTransaction = $journal->transactions()->where('transactions.id', '!=', $transaction->id)->first();\n\n    if (null === $opposingTransaction) {\n        app('session')->flash('error', trans('firefly.account_missing_transaction', ['name' => e($account->name), 'id' => $account->id]));\n        Log::error(sprintf('Expected an opposing transaction. Account #%d has none. BEEP, error.', $account->id));\n    }\n\n    return redirect(route('accounts.show', [$opposingTransaction->account_id]));\n}\n"
}