{
    "general_rule": "Rule: Implement Secure XML Parsing\n\n1. Type of improvement:\n   Replace vulnerable XML parsing methods with secure alternatives that prevent XML-based attacks.\n\n2. Benefits:\n   - Protects against XML External Entity (XXE) attacks and other XML vulnerabilities\n   - Improves overall security of applications that process XML data\n   - Reduces risk of data breaches and unauthorized access\n\n3. How to identify opportunities:\n   - Look for XML parsing code, especially methods that create XML parsers or process XML input\n   - Check for use of default XML parser configurations without security settings\n   - Review areas where XML data is received from external sources or user input\n\n4. General approach:\n   - Use secure XML parsing libraries or configure existing parsers with secure defaults\n   - Disable XML external entity processing and other dangerous features\n   - Validate and sanitize XML input before parsing\n   - Set entity expansion limits to prevent billion laughs attacks\n   - Keep XML parsing libraries up-to-date with security patches\n\nThis rule can be applied to any codebase that handles XML data, regardless of programming language or framework. Always consult language-specific best practices for secure XML handling."
}