{
    "before_functions": "getRowEditor: function () {\n    // ... (previous code remains the same)\n\n    for (var i = 0; i < languages.length; i++) {\n        readerFields.push({name: \"_\" + languages[i]});\n\n        var columnConfig = {\n            cls: \"x-column-header_\" + languages[i].toLowerCase(),\n            text: pimcore.available_languages[languages[i]],\n            sortable: true,\n            dataIndex: \"_\" + languages[i],\n            filter: 'string',\n            getEditor: this.getCellEditor.bind(this, languages[i]),\n            id: \"translation_column_\" + this.translationType + \"_\" + languages[i].toLowerCase()\n        };\n        if (applyInitialSettings) {\n            var hidden = i >= maxLanguages;\n            columnConfig.hidden = hidden;\n        }\n\n        typesColumns.push(columnConfig);\n    }\n\n    // ... (rest of the function remains the same)\n}\n",
    "after_functions": "getRowEditor: function () {\n    // ... (previous code remains the same)\n\n    for (var i = 0; i < languages.length; i++) {\n        readerFields.push({name: \"_\" + languages[i]});\n\n        var columnConfig = {\n            cls: \"x-column-header_\" + languages[i].toLowerCase(),\n            text: pimcore.available_languages[languages[i]],\n            sortable: true,\n            dataIndex: \"_\" + languages[i],\n            filter: 'string',\n            getEditor: this.getCellEditor.bind(this, languages[i]),\n            renderer: function (text) {\n                return replace_html_event_attributes(strip_tags(text, 'div,span,b,strong,em,i,small,sup,sub,p'));\n            },\n            id: \"translation_column_\" + this.translationType + \"_\" + languages[i].toLowerCase()\n        };\n        if (applyInitialSettings) {\n            var hidden = i >= maxLanguages;\n            columnConfig.hidden = hidden;\n        }\n\n        typesColumns.push(columnConfig);\n    }\n\n    // ... (rest of the function remains the same)\n}\n"
}