{
    "general_rule": "Rule: Implement Security Measures for User-Generated Content\n\n1. Type of improvement:\n   Adding input sanitization and output encoding for user-generated or externally sourced content.\n\n2. Benefits:\n   - Enhances security by preventing cross-site scripting (XSS) attacks\n   - Improves data integrity by ensuring only allowed content is displayed\n   - Reduces the risk of malicious code execution in the application\n\n3. Identifying similar opportunities:\n   - Look for areas where user input or external data is displayed in the UI\n   - Check for direct insertion of data into HTML elements or templates\n   - Review data rendering functions, especially those handling text or HTML content\n   - Examine places where rich text or HTML input is allowed\n\n4. General application:\n   - Implement input validation and sanitization for all user-supplied data\n   - Use appropriate encoding functions when outputting data to prevent script injection\n   - Apply context-specific encoding (e.g., HTML, JavaScript, URL) based on where the data is used\n   - Consider using established security libraries or frameworks for consistent protection\n   - Regularly audit and update security measures to address new vulnerabilities\n\nThis rule can be applied across various programming languages and frameworks to improve overall application security and protect against common web vulnerabilities."
}