{
    "general_rule": "Rule: Validate Input Data Before Processing\n\n1. Type of Improvement:\n   This optimization focuses on validating input data early in the process to prevent unnecessary computations and potential errors.\n\n2. Benefits:\n   - Reduces unnecessary processing of invalid or irrelevant data\n   - Improves system stability by catching potential issues early\n   - Enhances security by rejecting potentially malicious input\n   - Saves resources by avoiding expensive operations on invalid data\n\n3. Identifying Similar Opportunities:\n   Look for functions or methods that:\n   - Receive external input (e.g., from user interfaces, APIs, or file systems)\n   - Perform complex operations or database queries based on input\n   - Make network requests or interact with external systems\n   - Handle security-sensitive operations\n\n   Pay special attention to:\n   - Input parameters that should meet specific criteria\n   - Data that needs to be in a particular format or range\n   - Assumptions made about the validity of input data\n\n4. General Application:\n   - Implement input validation checks as early as possible in the data flow\n   - Use appropriate data validation techniques (e.g., type checking, range validation, format verification)\n   - Handle invalid input gracefully, providing clear error messages or logging\n   - Consider using input validation libraries or frameworks when available\n   - Separate validation logic from business logic for better maintainability\n   - Implement defensive programming practices throughout the codebase"
}