{
    "general_rule": "Rule: Sanitize and normalize input data early in the process\n\n1. Type of improvement:\n   This optimization focuses on cleaning and standardizing input data as soon as it's received or processed.\n\n2. Benefits:\n   - Improves security by preventing potential injection attacks or malformed inputs\n   - Ensures consistency throughout the codebase, reducing errors and unexpected behavior\n   - Simplifies downstream processing and reduces the need for repeated sanitization\n\n3. How to identify similar opportunities:\n   - Look for functions or methods that handle user input or external data\n   - Identify areas where the same data is used in multiple places, especially in file system operations or database queries\n   - Check for inconsistent handling of the same type of data across different parts of the application\n\n4. General application:\n   - Implement input sanitization functions that can be reused across the application\n   - Apply sanitization as close to the data entry point as possible\n   - Use consistent naming conventions for sanitized data to make it clear when data has been processed\n   - Consider creating a centralized data processing service or utility class for complex sanitization logic\n   - Regularly review and update sanitization rules to address new security concerns or changing requirements"
}