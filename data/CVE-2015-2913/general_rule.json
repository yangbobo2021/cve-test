{
    "general_rule": "Rule: Use Cryptographically Secure Random Number Generators for Security-Sensitive Operations\n\n1. Type of Improvement:\n   Replacing a standard random number generator with a cryptographically secure one.\n\n2. Benefits:\n   - Enhances security by using a more unpredictable source of randomness\n   - Reduces the risk of potential vulnerabilities in security-sensitive operations\n   - Improves the overall robustness of the application\n\n3. How to Identify Similar Opportunities:\n   - Look for instances where random numbers are generated, especially in security-related contexts\n   - Pay attention to the creation of unique identifiers, tokens, or keys\n   - Review areas of the code dealing with authentication, session management, or cryptographic operations\n\n4. General Application:\n   - This rule can be applied to any project that requires random number generation for security-sensitive tasks\n   - It's particularly important in web applications, authentication systems, and cryptographic libraries\n   - The principle of using secure randomness extends beyond just random number generators and can be applied to other areas where unpredictability is crucial for security"
}