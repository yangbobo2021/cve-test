{
    "before_functions": "function printDirect(parameters){\n\tvar data = parameters\n\t\t, printer\n\t\t, docname\n\t\t, type\n\t\t, success\n\t\t, error;\n\t\n\tif(arguments.length==1){\n\t\t//TODO: check parameters type\n\t\t//if (typeof parameters )\n\t\tdata = parameters.data;\n\t\tprinter = parameters.printer;\n\t\tdocname = parameters.docname;\n\t\ttype = parameters.type;\n\t\tsuccess = parameters.success;\n\t\terror = parameters.error;\n\t}else{\n\t\tprinter = arguments[1];\n\t\ttype = arguments[2];\n\t\tdocname = arguments[3];\n\t\tsuccess = arguments[4];\n\t\terror = arguments[5];\n\t}\n\t\n\tif(!success){\n\t\tsuccess = function(){};\n\t}\n\t\n\tif(!error){\n\t\terror = function(err){\n\t\t\tthrow err;\n\t\t};\n\t}\n\t\n\tif(!type){\n\t\ttype = \"RAW\";\n\t}\n\t\n\tif(!docname){\n\t\tdocname = \"node print job\";\n\t}\n\t\n\t//TODO: check parameters type\n\tif(process.platform==\"win32\"){// call C++ binding\n\t\tif(!printer_helper.printDirect){\n\t\t\terror(\"Not supported, try to compile this package with MSC\");\n\t\t\treturn;\n\t\t}\n\t\ttry{\n\t\t\tvar res = printer_helper.printDirect(data, printer, docname, type, success, error);\n\t\t\tif(res===true){\n\t\t\t\tsuccess();\n\t\t\t}else{\n\t\t\t\terror(Error(\"Something wrong\"));\n\t\t\t}\n\t\t}catch (e){\n\t\t\terror(e);\n\t\t}\n    }else if (!printer_helper.printDirect){// should be POSIX\n        var temp_file_name = path.join(os.tmpDir(),\"printing\");\n        fs.writeFileSync(temp_file_name, data);\n        child_process.exec('lpr -P'+printer+' -oraw -r'+' '+temp_file_name, function(err, stdout, stderr){\n            if (err !== null) {\n                error('ERROR: ' + err);\n                return;\n            }\n            if (stderr) {\n                error('STD ERROR: ' + stderr);\n                return;\n            }\n            success();\n        });\n    }else{\n\t\terror(\"Not supported\");\n\t}\n}\n",
    "after_functions": "function printDirect(parameters){\n\tvar data = parameters\n\t\t, printer\n\t\t, docname\n\t\t, type\n\t\t, success\n\t\t, error;\n\t\n\tif(arguments.length==1){\n\t\t//TODO: check parameters type\n\t\t//if (typeof parameters )\n\t\tdata = parameters.data;\n\t\tprinter = parameters.printer;\n\t\tdocname = parameters.docname;\n\t\ttype = parameters.type;\n\t\tsuccess = parameters.success;\n\t\terror = parameters.error;\n\t}else{\n\t\tprinter = arguments[1];\n\t\ttype = arguments[2];\n\t\tdocname = arguments[3];\n\t\tsuccess = arguments[4];\n\t\terror = arguments[5];\n\t}\n\t\n\tif(!success){\n\t\tsuccess = function(){};\n\t}\n\t\n\tif(!error){\n\t\terror = function(err){\n\t\t\tthrow err;\n\t\t};\n\t}\n\t\n\tif(!type){\n\t\ttype = \"RAW\";\n\t}\n\t\n\tif(!docname){\n\t\tdocname = \"node print job\";\n\t}\n\t\n\t//TODO: check parameters type\n\tif(process.platform==\"win32\"){// call C++ binding\n\t\tif(!printer_helper.printDirect){\n\t\t\terror(\"Not supported, try to compile this package with MSC\");\n\t\t\treturn;\n\t\t}\n\t\ttry{\n\t\t\tvar res = printer_helper.printDirect(data, printer, docname, type, success, error);\n\t\t\tif(res===true){\n\t\t\t\tsuccess();\n\t\t\t}else{\n\t\t\t\terror(Error(\"Something wrong\"));\n\t\t\t}\n\t\t}catch (e){\n\t\t\terror(e);\n\t\t}\n    }else if (!printer_helper.printDirect){// should be POSIX\n        var temp_file_name = path.join(os.tmpDir(),\"printing\");\n        fs.writeFileSync(temp_file_name, data);\n        child_process.execFile('lpr', ['-P' + printer, '-oraw', '-r', temp_file_name], function(err, stdout, stderr){\n            if (err !== null) {\n                error('ERROR: ' + err);\n                return;\n            }\n            if (stderr) {\n                error('STD ERROR: ' + stderr);\n                return;\n            }\n            success();\n        });\n    }else{\n\t\terror(\"Not supported\");\n\t}\n}\n"
}