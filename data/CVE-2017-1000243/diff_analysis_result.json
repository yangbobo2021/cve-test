{
    "before_functions": "public void doToggleFavorite(StaplerRequest req, StaplerResponse resp, @QueryParameter String job, @QueryParameter String userName, @QueryParameter Boolean redirect) throws IOException {\n    if (\"\".equals(userName) || userName == null) {\n        Authentication authentication = Jenkins.getAuthentication();\n        userName = authentication.getName();\n    }\n    Jenkins jenkins = Jenkins.getInstance();\n    if (jenkins == null) {\n        throw new IllegalStateException(\"Jenkins not started\");\n    }\n    User user = jenkins.getUser(userName);\n    if (user != null && !isAnonymous(user)) {\n        try {\n            Favorites.toggleFavorite(user, getItem(job));\n        } catch (FavoriteException e) {\n            throw new IOException(e);\n        }\n    }\n    if(redirect) {\n        if (!job.contains(\"/\"))\n        {\n          // Works for default URL pattern: rootUrl/job/jobName\n          resp.sendRedirect(resp.encodeRedirectURL(jenkins.getRootUrl() + \"job/\" + job));\n        }\n        else\n        {\n          // Works for folder URL pattern:\n          // rootUrl/job/folder/job/jobName\n          // rootUrl/job/folder/job/subfolder/job/jobName etc.\n          StringBuilder urlPostfix = new StringBuilder(\"job/\");\n          String[] itemNames = job.split(\"/\");\n          for (int i = 0; i < itemNames.length; i++)\n          {\n            urlPostfix.append(itemNames[i]);                  \n            if (i < itemNames.length - 1)\n            {\n              urlPostfix.append(\"/job/\");\n            }\n          }\n          resp.sendRedirect(resp.encodeRedirectURL(jenkins.getRootUrl() + urlPostfix.toString()));\n        }\n    }\n}\n",
    "after_functions": "public void doToggleFavorite(StaplerRequest req, StaplerResponse resp, @QueryParameter String job, @QueryParameter Boolean redirect) throws IOException {\n    Jenkins jenkins = Jenkins.getInstance();\n    if (jenkins == null) {\n        throw new IllegalStateException(\"Jenkins not started\");\n    }\n    User user = User.current();\n    if (user != null && !isAnonymous(user)) {\n        try {\n            Favorites.toggleFavorite(user, getItem(job));\n        } catch (FavoriteException e) {\n            throw new IOException(e);\n        }\n    }\n    if(redirect) {\n        if (!job.contains(\"/\"))\n        {\n          // Works for default URL pattern: rootUrl/job/jobName\n          resp.sendRedirect(resp.encodeRedirectURL(jenkins.getRootUrl() + \"job/\" + job));\n        }\n        else\n        {\n          // Works for folder URL pattern:\n          // rootUrl/job/folder/job/jobName\n          // rootUrl/job/folder/job/subfolder/job/jobName etc.\n          StringBuilder urlPostfix = new StringBuilder(\"job/\");\n          String[] itemNames = job.split(\"/\");\n          for (int i = 0; i < itemNames.length; i++)\n          {\n            urlPostfix.append(itemNames[i]);                  \n            if (i < itemNames.length - 1)\n            {\n              urlPostfix.append(\"/job/\");\n            }\n          }\n          resp.sendRedirect(resp.encodeRedirectURL(jenkins.getRootUrl() + urlPostfix.toString()));\n        }\n    }\n}\n"
}